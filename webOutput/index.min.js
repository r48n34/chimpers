"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{stringDataToBuffer:()=>stringDataToBuffer,decodeFile:()=>decodeFile});const _fs=_interopRequireDefault(require("fs"));const _fileType=_interopRequireDefault(require("file-type"));const _path=_interopRequireDefault(require("path"));const _dataChar=require("../../data/dataChar");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{Promise.resolve(value).then(_next,_throw)}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(undefined)})}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function stringDataToBuffer(encodedText){let finalArray=encodedText.split(" ")[0].split("").filter(v=>_dataChar.hiddenCharTobinNum.indexOf(v.charCodeAt(0))>=0);let bufferArr=[];for(let i=0;i<finalArray.length;i+=4){const codeBin=_dataChar.hiddenCharTobin[finalArray[i].charCodeAt(0)]+_dataChar.hiddenCharTobin[finalArray[i+1].charCodeAt(0)]+_dataChar.hiddenCharTobin[finalArray[i+2].charCodeAt(0)]+_dataChar.hiddenCharTobin[finalArray[i+3].charCodeAt(0)];bufferArr.push(parseInt(codeBin,2))}return new Uint8Array(bufferArr)}function decodeFile(encodedText){return _decodeFile.apply(this,arguments)}function _decodeFile(){_decodeFile=_asyncToGenerator(function*(encodedText,outputFileName="decodedFile",outputPath=process.cwd()){if(!encodedText||encodedText===""){throw new Error("decodeFile function missing encodedText input in params 'encodedText'.")}if(!outputFileName||outputFileName===""){throw new Error("decodeFile function missing outputFileName input in params 'outputFileName'.")}const unitBufferArr=stringDataToBuffer(encodedText);const fileHeader=yield _fileType.default.fromBuffer(unitBufferArr);const fileExt=fileHeader?`.${fileHeader.ext}`:".txt";let outputLocation=_path.default.join(outputPath,outputFileName+fileExt);_fs.default.writeFileSync(outputLocation,unitBufferArr);return unitBufferArr});return _decodeFile.apply(this,arguments)}
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{dec2bin:()=>dec2bin,encodeFile:()=>encodeFile});const _dataChar=require("../../data/dataChar");function dec2bin(dec){let decStr=(dec>>>0).toString(2);while(decStr.length<=7){decStr="0"+decStr}return decStr}function encodeFile(data){let finalArray=[];for(let v of data){const binStr=dec2bin(v);for(let i=0;i<7;i+=2){const code=binStr[i]+binStr[i+1];finalArray.push(_dataChar.binToHiddenChar[code])}}return finalArray}

//# sourceMappingURL=index.min.js.map